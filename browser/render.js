//브라우저 렌더링 과정.
//1.브라우저는 html,css,js,image,font 등 렌더링에 필요한 리소스를 요청하고 서버로 부터 응답을 받는다.
//2.브라우저의 렌더링 엔진은 서버로부터 응답된 html과 css를 파싱하여 dom과 cssom을 생성하고 이들을 결합하여 렌더트리를 생성한다.
//3.브라우저의 js엔진은 서버로부터 응답된 js를 파싱하여 AST를생성하고 바이트코드로 변환하여 실행한다. 이때 DOM API를 통해 DOM이나 CSSOM에 변경을 줄수있다.(리플로우,리렌더링) . 변경된 DOM과 CSSOM은 다시 렌더 트리로 결합된다.
//4.렌더 트리를 기반으로 HTML요소의 레이아웃(위치와 크기)를 계산하고 브라우저 화면에 HTML요소를 페인팅한다.

//주소창에 WWW.NAVER.COM 을 입력하고 엔터를 누르면?
//URL을 입력하고 엔터를 누르면 URL의 호스트 이름이 DNS를 통해 IP주소로 변환되고 이 IP 주소를 갖는 서버에게 요청을 전송한다.

//HTTP1.1 VS HTTP2.0
//HTTP1.1은 커넥션당 하나의 요청과 응답만 처리한다.
//HTTP2.0은 커넥션당 다중요청/응답이 가능하다. 여러리소스의 동시 전송이 가능하므로 페이지로드속도가 약 50% 더 빠르다.(HTTP1.1보다)\\

//ASYNC VS DEFER
//파싱할때 Script위치가 중요하다.
//async는 비동기로 html js 로드가 진행된다. js 의파싱과실행이 로드가 완료된 직후 진행되고 html은 파싱이중단되어 순서가 보장되지않는다.
//defer은 async와 마찬가지로 비동기적으로 html js로드가 진행된다. 그러나 async와 달리 js의 파싱과 실행이 html의 파싱이 완료된 직후, 즉 , DOM이 생성이 되고나서 진행된다.